{"version":3,"sources":["ng://ng-vertical-tabs/lib/ng-vertical-tabs.service.ts","ng://ng-vertical-tabs/lib/ng-vertical-tab/ng-vertical-tab.component.ts","ng://ng-vertical-tabs/lib/dynamic-tab-anchor.directive.ts","ng://ng-vertical-tabs/lib/ng-vertical-tabs/ng-vertical-tabs.component.ts","ng://ng-vertical-tabs/lib/ng-vertical-tabs.module.ts"],"names":["NgVerticalTabsService","this","selectedOptions","Injectable","args","providedIn","NgVerticalTabComponent","tabsService","active","isCloseable","Component","selector","template","Input","DynamicTabAnchorDirective","viewContainer","Directive","ViewContainerRef","NgVerticalTabsComponent","componentFactoryResolver","tabService","multi","selectFirstTab","showSelectAll","allSelected","dynamicTabs","prototype","ngAfterContentInit","tabs","filter","tab","length","selectTab","first","checkSelectAll","onNgModelChange","setOptions","toggleTabActivations","push","tabTitle","list","options","map","t","value","s","Set","forEach","selected","has","optionsSet","option","TypeError","openTab","title","data","componentFactory","resolveComponentFactory","instance","dynamicTabPlaceholder","createComponent","dataContext","closeTab","i","splice","remove","closeActiveTab","console","warn","activeTab","toggleSelect","deselectAll","selectAll","arr","toArray","concat","_this","lastSelectedOptions","reduce","p","c","ComponentFactoryResolver","ContentChildren","ViewChild","static","MatSelectionList","NgVerticalTabsModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","FormsModule","FlexLayoutModule","MatListModule","MatDividerModule","MatButtonModule","entryComponents","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgVerticalTabsService {\n  multi: boolean;\n  selectedOptions: string[];\n\n  constructor() {\n    this.selectedOptions = [];\n  }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { NgVerticalTabsService } from '../ng-vertical-tabs.service';\n\n@Component({\n  selector: 'ng-vertical-tab',\n  templateUrl: './ng-vertical-tab.component.html',\n  styleUrls: ['./ng-vertical-tab.component.scss']\n})\nexport class NgVerticalTabComponent {\n  @Input() tabTitle: string;\n  @Input() active = false;\n  @Input() template;\n  @Input() dataContext;\n  @Input() isCloseable = false;\n\n  constructor(public tabsService: NgVerticalTabsService) {\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ngVerticalDynamicTabAnchor]'\n})\nexport class DynamicTabAnchorDirective {\n  constructor(public viewContainer: ViewContainerRef) {\n  }\n}\n","import { AfterContentInit, Component, ComponentFactoryResolver, ContentChildren, Input, QueryList, ViewChild } from '@angular/core';\n\nimport { MatSelectionList } from '@angular/material';\n\nimport { NgVerticalTabsService } from '../ng-vertical-tabs.service';\nimport { NgVerticalTabComponent } from '../ng-vertical-tab/ng-vertical-tab.component';\nimport { DynamicTabAnchorDirective } from '../dynamic-tab-anchor.directive';\n\n@Component({\n  selector: 'ng-vertical-tabs',\n  templateUrl: './ng-vertical-tabs.component.html',\n  styleUrls: ['./ng-vertical-tabs.component.scss']\n})\nexport class NgVerticalTabsComponent implements AfterContentInit {\n  @ContentChildren(NgVerticalTabComponent) tabs: QueryList<NgVerticalTabComponent>;\n  @ViewChild(DynamicTabAnchorDirective, { static: false }) dynamicTabPlaceholder: DynamicTabAnchorDirective;\n\n  @ViewChild(MatSelectionList, { static: false }) list: MatSelectionList;\n\n  @Input() multi = true;\n  @Input() selectFirstTab = true;\n  @Input() showSelectAll = false;\n  allSelected = true;\n\n  dynamicTabs: NgVerticalTabComponent[] = [];\n\n  lastSelectedOptions: string[];\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              public tabService: NgVerticalTabsService) {\n    this.tabService.multi = this.multi;\n  }\n\n  // contentChildren are set\n  ngAfterContentInit() {\n    // if there is no active tab set, activate the first\n    if (this.selectFirstTab && !this.tabs.filter(tab => tab.active).length) {\n      this.selectTab(this.tabs.first);\n    } else {\n      this.checkSelectAll();\n    }\n  }\n\n  onNgModelChange(/*selected: string[]*/) {\n    this.setOptions();\n    this.toggleTabActivations();\n    this.checkSelectAll();\n  }\n\n  selectTab(tab: NgVerticalTabComponent) {\n    this.multi ?\n      this.tabService.selectedOptions.push(tab.tabTitle)\n      : this.tabService.selectedOptions = [tab.tabTitle];\n    tab.active = true;\n\n    if (!this.list || !this.list.options) {\n      return;\n    }\n\n    const options = this.list.options.map(t => t.value);\n    const s = new Set(this.tabService.selectedOptions);\n    this.list.options.forEach(t => {\n      t.selected = s.has(t.value);\n      // console.info(`'${t.value}' selected:`, t.selected);\n    });\n\n    const optionsSet = new Set(options);\n    this.tabService.selectedOptions.forEach(option => {\n      if (!optionsSet.has(option)) {\n        throw TypeError(`'${option}' not found in mat-selection-list`);\n      }\n    });\n\n    this.checkSelectAll();\n  }\n\n  openTab(title: string, template, data, isCloseable = false) {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      NgVerticalTabComponent\n    );\n\n    // create a component instance\n    const componentRef = this.dynamicTabPlaceholder.viewContainer.createComponent(componentFactory);\n\n    // set the according properties on our component instance\n    const instance: NgVerticalTabComponent = componentRef.instance as NgVerticalTabComponent;\n    instance.tabTitle = title;\n    instance.template = template;\n    instance.dataContext = data;\n    instance.isCloseable = isCloseable;\n    instance.active = true;\n\n    this.dynamicTabs.push(instance);\n    this.selectTab(this.dynamicTabs[this.dynamicTabs.length - 1]);\n  }\n\n  closeTab(tab: NgVerticalTabComponent) {\n    for (let i = 0; i < this.dynamicTabs.length; i++) {\n      if (this.dynamicTabs[i] === tab) {\n        this.dynamicTabs.splice(i, 1);\n\n        this.dynamicTabPlaceholder.viewContainer.remove(i);\n        this.tabService.selectedOptions = [tab.tabTitle];  // TODO: duplicate handling\n        this.selectTab(this.tabs.first);\n        break;\n      }\n    }\n    this.checkSelectAll();\n  }\n\n  closeActiveTab() {\n    if (this.multi) {\n      console.warn('Closing the first active tab');\n    }\n    const activeTab = this.dynamicTabs.filter(tab => tab.active);\n    if (activeTab.length > 0) {\n      this.closeTab(activeTab[0]);\n    }\n    this.checkSelectAll();\n  }\n\n  toggleSelect() {\n    this.allSelected ? this.list.deselectAll() : this.list.selectAll();\n    this.allSelected = !this.allSelected;\n    this.checkSelectAll();\n  }\n\n  private toggleTabActivations() {\n    const arr: NgVerticalTabComponent[] = this.tabs.toArray().concat(this.dynamicTabs);\n    if (arr == null || arr.length < 1) {\n      return;\n    }\n    const s = new Set(this.tabService.selectedOptions);\n    arr.forEach(tab => tab.active = s.has(tab.tabTitle));\n  }\n\n  private setOptions() {\n    if (this.multi || !this.tabService.selectedOptions.length ||\n      !this.lastSelectedOptions || !this.lastSelectedOptions.length) {\n      return;\n    }\n\n    this.tabService.selectedOptions = this.tabService.selectedOptions.filter(\n      tabTitle => tabTitle !== this.lastSelectedOptions[this.lastSelectedOptions.length - 1]\n    );\n\n    this.lastSelectedOptions = this.tabService.selectedOptions;\n  }\n\n  private checkSelectAll() {\n    if (!this.list || !this.list.options) {\n      return;\n    }\n\n    this.allSelected = this.list.options.length < 1 ? false\n      : this.list.options.reduce((p, c) => p ? c.selected : p, true as boolean);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatButtonModule, MatDividerModule, MatListModule } from '@angular/material';\n\nimport { NgVerticalTabsComponent } from './ng-vertical-tabs/ng-vertical-tabs.component';\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { NgVerticalTabsService } from './ng-vertical-tabs.service';\nimport { NgVerticalTabComponent } from './ng-vertical-tab/ng-vertical-tab.component';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule,\n    FlexLayoutModule,\n    MatListModule, MatDividerModule, MatButtonModule\n  ],\n  entryComponents: [NgVerticalTabComponent],\n  declarations: [DynamicTabAnchorDirective, NgVerticalTabComponent, NgVerticalTabsComponent, NgVerticalTabComponent],\n  exports: [NgVerticalTabComponent, NgVerticalTabsComponent]\n})\nexport class NgVerticalTabsModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: NgVerticalTabsModule, providers: [NgVerticalTabsService] };\n  }\n}\n"]}