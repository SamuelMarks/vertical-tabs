{"version":3,"sources":["ng://vertical-tabs/lib/vertical-tabs.service.ts","ng://vertical-tabs/lib/dynamic-tab-anchor.directive.ts","ng://vertical-tabs/lib/vertical-tab.component.ts","ng://vertical-tabs/lib/vertical-tabs.component.ts","ng://vertical-tabs/lib/vertical-tabs.module.ts"],"names":["VerticalTabsService","this","selectedOptions","Injectable","args","providedIn","DynamicTabAnchorDirective","viewContainer","Directive","selector","ViewContainerRef","VerticalTabComponent","tabsService","active","isCloseable","Component","template","Input","VerticalTabsComponent","componentFactoryResolver","tabService","multi","selectFirstTab","showSelectAll","allSelected","dynamicTabs","prototype","ngAfterContentInit","tabs","filter","tab","length","selectTab","first","checkSelectAll","onNgModelChange","setOptions","toggleTabActivations","push","tabTitle","list","options","map","t","value","s","Set","forEach","selected","has","options_set","option","TypeError","openTab","title","data","componentFactory","resolveComponentFactory","instance","dynamicTabPlaceholder","createComponent","dataContext","closeTab","i","splice","remove","closeActiveTab","console","warn","activeTab","toggleSelect","deselectAll","selectAll","arr","toArray","concat","_this","lastSelectedOptions","reduce","p","c","ComponentFactoryResolver","ContentChildren","ViewChild","MatSelectionList","VerticalTabsModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","FormsModule","FlexLayoutModule","MatListModule","MatDividerModule","MatButtonModule","entryComponents","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerticalTabsService {\n  multi: boolean;\n  selectedOptions: string[];\n\n  constructor() {\n    this.selectedOptions = [];\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngVerticalDynamicTabAnchor]'\n})\nexport class DynamicTabAnchorDirective {\n  constructor(public viewContainer: ViewContainerRef) {\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n\n@Component({\n  selector: 'ng-vertical-tab',\n  templateUrl: './vertical-tab.component.html',\n  styles: [`\n    .pane {\n      padding: 1em;\n    }\n  `]\n})\nexport class VerticalTabComponent {\n  @Input() tabTitle: string;\n  @Input() active = false;\n  @Input() template;\n  @Input() dataContext;\n  @Input() isCloseable = false;\n\n  constructor(public tabsService: VerticalTabsService) {\n  }\n}\n","import { AfterContentInit, Component, ComponentFactoryResolver, ContentChildren, Input, QueryList, ViewChild } from '@angular/core';\nimport { MatSelectionList } from '@angular/material';\n\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { VerticalTabComponent } from './vertical-tab.component';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n@Component({\n  selector: 'ng-vertical-tabs',\n  templateUrl: './vertical-tabs.component.html',\n  styles: []\n})\nexport class VerticalTabsComponent implements AfterContentInit {\n  @ContentChildren(VerticalTabComponent) tabs: QueryList<VerticalTabComponent>;\n  @ViewChild(DynamicTabAnchorDirective) dynamicTabPlaceholder: DynamicTabAnchorDirective;\n\n  @ViewChild(MatSelectionList) list: MatSelectionList;\n\n  @Input() multi = true;\n  @Input() selectFirstTab = true;\n  @Input() showSelectAll = false;\n  allSelected = true;\n\n  dynamicTabs: VerticalTabComponent[] = [];\n\n  lastSelectedOptions: string[];\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              public tabService: VerticalTabsService) {\n    this.tabService.multi = this.multi;\n  }\n\n  // contentChildren are set\n  ngAfterContentInit() {\n    // if there is no active tab set, activate the first\n    if (this.selectFirstTab && !this.tabs.filter(tab => tab.active).length)\n      this.selectTab(this.tabs.first);\n    else this.checkSelectAll();\n  }\n\n  onNgModelChange(/*selected: string[]*/) {\n    this.setOptions();\n    this.toggleTabActivations();\n    this.checkSelectAll();\n  }\n\n  selectTab(tab: VerticalTabComponent) {\n    this.multi ?\n      this.tabService.selectedOptions.push(tab.tabTitle)\n      : this.tabService.selectedOptions = [tab.tabTitle];\n    tab.active = true;\n\n    if (!this.list.options) return;\n\n    const options = this.list.options.map(t => t.value);\n    const s = new Set(this.tabService.selectedOptions);\n    this.list.options.forEach(t => {\n      t.selected = s.has(t.value);\n      // console.info(`'${t.value}' selected:`, t.selected);\n    });\n\n    const options_set = new Set(options);\n    this.tabService.selectedOptions.forEach(option => {\n      if (!options_set.has(option))\n        throw TypeError(`'${option}' not found in mat-selection-list`);\n    });\n\n    this.checkSelectAll();\n  }\n\n  openTab(title: string, template, data, isCloseable = false) {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      VerticalTabComponent\n    );\n\n    // create a component instance\n    const componentRef = this.dynamicTabPlaceholder.viewContainer.createComponent(componentFactory);\n\n    // set the according properties on our component instance\n    const instance: VerticalTabComponent = componentRef.instance as VerticalTabComponent;\n    instance.tabTitle = title;\n    instance.template = template;\n    instance.dataContext = data;\n    instance.isCloseable = isCloseable;\n    instance.active = true;\n\n    this.dynamicTabs.push(instance);\n    this.selectTab(this.dynamicTabs[this.dynamicTabs.length - 1]);\n  }\n\n  closeTab(tab: VerticalTabComponent) {\n    for (let i = 0; i < this.dynamicTabs.length; i++) {\n      if (this.dynamicTabs[i] === tab) {\n        this.dynamicTabs.splice(i, 1);\n\n        this.dynamicTabPlaceholder.viewContainer.remove(i);\n        this.tabService.selectedOptions = [tab.tabTitle];  // TODO: duplicate handling\n        this.selectTab(this.tabs.first);\n        break;\n      }\n    }\n    this.checkSelectAll();\n  }\n\n  closeActiveTab() {\n    if (this.multi) console.warn('Closing the first active tab');\n    const activeTab = this.dynamicTabs.filter(tab => tab.active);\n    if (activeTab.length > 0) this.closeTab(activeTab[0]);\n    this.checkSelectAll();\n  }\n\n  toggleSelect() {\n    this.allSelected ? this.list.deselectAll() : this.list.selectAll();\n    this.allSelected = !this.allSelected;\n    this.checkSelectAll();\n  }\n\n  private toggleTabActivations() {\n    const arr: VerticalTabComponent[] = this.tabs.toArray().concat(this.dynamicTabs);\n    if (arr == null || arr.length < 1) return;\n    const s = new Set(this.tabService.selectedOptions);\n    arr.forEach(tab => tab.active = s.has(tab.tabTitle));\n  }\n\n  private setOptions() {\n    if (this.multi || !this.tabService.selectedOptions.length ||\n      !this.lastSelectedOptions || !this.lastSelectedOptions.length)\n      return;\n\n    this.tabService.selectedOptions = this.tabService.selectedOptions.filter(\n      tabTitle => tabTitle !== this.lastSelectedOptions[this.lastSelectedOptions.length - 1]\n    );\n\n    this.lastSelectedOptions = this.tabService.selectedOptions;\n  }\n\n  private checkSelectAll() {\n    if (!this.list || !this.list.options) return;\n    this.allSelected = this.list.options.length < 1 ? false\n      : this.list.options.reduce((p, c) => p ? c.selected : p, true);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule, MatDividerModule, MatListModule } from '@angular/material';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { VerticalTabsComponent } from './vertical-tabs.component';\nimport { VerticalTabComponent } from './vertical-tab.component';\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule,\n    FlexLayoutModule,\n    MatListModule, MatDividerModule, MatButtonModule\n  ],\n  entryComponents: [VerticalTabComponent],\n  declarations: [DynamicTabAnchorDirective, VerticalTabComponent, VerticalTabsComponent],\n  exports: [VerticalTabComponent, VerticalTabsComponent]\n})\nexport class VerticalTabsModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: VerticalTabsModule, providers: [VerticalTabsService] };\n  }\n}\n"]}