{"version":3,"sources":["ng://vertical-tabs/lib/vertical-tabs.service.ts","ng://vertical-tabs/lib/dynamic-tab-anchor.directive.ts","ng://vertical-tabs/lib/vertical-tab.component.ts","ng://vertical-tabs/lib/vertical-tabs.component.ts","ng://vertical-tabs/lib/vertical-tabs.module.ts"],"names":["VerticalTabsService","this","selectedOptions","Injectable","args","providedIn","DynamicTabAnchorDirective","viewContainer","Directive","selector","ViewContainerRef","VerticalTabComponent","tabsService","Component","template","styles","Input","VerticalTabsComponent","componentFactoryResolver","tabService","multi","prototype","ngAfterContentInit","selectFirstTab","tabs","filter","tab","active","length","selectTab","first","checkSelectAll","onNgModelChange","setOptions","toggleTabActivations","push","tabTitle","list","options","map","t","value","s","Set","forEach","selected","has","options_set","option","TypeError","openTab","title","data","isCloseable","componentFactory","resolveComponentFactory","instance","dynamicTabPlaceholder","createComponent","dataContext","dynamicTabs","closeTab","i","splice","remove","closeActiveTab","console","warn","activeTab","toggleSelect","allSelected","deselectAll","selectAll","arr","toArray","concat","lastSelectedOptions","_this","reduce","p","c","ComponentFactoryResolver","ContentChildren","ViewChild","MatSelectionList","VerticalTabsModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","FormsModule","FlexLayoutModule","MatListModule","MatDividerModule","MatButtonModule","entryComponents","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerticalTabsService {\n  multi: boolean;\n  selectedOptions: string[];\n\n  constructor() {\n    this.selectedOptions = [];\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngVerticalDynamicTabAnchor]'\n})\nexport class DynamicTabAnchorDirective {\n  constructor(public viewContainer: ViewContainerRef) {\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n\n@Component({\n  selector: 'ng-vertical-tab',\n  template: `<div *ngIf=\"active\" class=\"pane\">\n  <h3 class=\"tab-heading\" *ngIf=\"tabsService.multi && tabsService.selectedOptions.length > 1\">\n    {{tabTitle}}\n  </h3>\n  <ng-content></ng-content>\n  <ng-container *ngIf=\"template\"\n                [ngTemplateOutlet]=\"template\"\n                [ngTemplateOutletContext]=\"{person: dataContext}\">\n  </ng-container>\n</div>\n`,\n  styles: [`\n    .pane {\n      padding: 1em;\n    }\n  `]\n})\nexport class VerticalTabComponent {\n  @Input() tabTitle: string;\n  @Input() active = false;\n  @Input() template;\n  @Input() dataContext;\n  @Input() isCloseable = false;\n\n  constructor(public tabsService: VerticalTabsService) {\n  }\n}\n","import { AfterContentInit, Component, ComponentFactoryResolver, ContentChildren, Input, QueryList, ViewChild } from '@angular/core';\nimport { MatSelectionList } from '@angular/material';\n\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { VerticalTabComponent } from './vertical-tab.component';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n@Component({\n  selector: 'ng-vertical-tabs',\n  template: `<div fxLayout=\"row\" fxLayoutGap=\"1px\" fxLayout.xs=\"column\">\n  <div fxFlex=\"33%\">\n    <mat-selection-list #list [(ngModel)]=\"tabService.selectedOptions\"\n                        (ngModelChange)=\"onNgModelChange()\">\n      <mat-list-option *ngFor=\"let tab of [].concat(tabs.toArray(), dynamicTabs)\" [value]=\"tab.tabTitle\">\n        {{tab.tabTitle}}\n      </mat-list-option>\n    </mat-selection-list>\n    <mat-divider></mat-divider>\n    <button mat-button color=\"primary\" id=\"select\"\n            (click)=\"toggleSelect()\" *ngIf=\"showSelectAll\">\n      {{allSelected ? 'Reset selection' : 'Select all'}}\n    </button>\n  </div>\n\n  <div fxFlex=\"66%\" *ngIf=\"tabService.selectedOptions.length\">\n    <ng-content></ng-content>\n    <ng-template ngVerticalDynamicTabAnchor #container></ng-template>\n  </div>\n</div>\n`,\n  styles: []\n})\nexport class VerticalTabsComponent implements AfterContentInit {\n  @ContentChildren(VerticalTabComponent) tabs: QueryList<VerticalTabComponent>;\n  @ViewChild(DynamicTabAnchorDirective) dynamicTabPlaceholder: DynamicTabAnchorDirective;\n\n  @ViewChild(MatSelectionList) list: MatSelectionList;\n\n  @Input() multi = true;\n  @Input() selectFirstTab = true;\n  @Input() showSelectAll = false;\n  allSelected = true;\n\n  dynamicTabs: VerticalTabComponent[] = [];\n\n  lastSelectedOptions: string[];\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              public tabService: VerticalTabsService) {\n    this.tabService.multi = this.multi;\n  }\n\n  // contentChildren are set\n  ngAfterContentInit() {\n    // if there is no active tab set, activate the first\n    if (this.selectFirstTab && !this.tabs.filter(tab => tab.active).length)\n      this.selectTab(this.tabs.first);\n    else this.checkSelectAll();\n  }\n\n  onNgModelChange(/*selected: string[]*/) {\n    this.setOptions();\n    this.toggleTabActivations();\n    this.checkSelectAll();\n  }\n\n  selectTab(tab: VerticalTabComponent) {\n    this.multi ?\n      this.tabService.selectedOptions.push(tab.tabTitle)\n      : this.tabService.selectedOptions = [tab.tabTitle];\n    tab.active = true;\n\n    if (!this.list.options) return;\n\n    const options = this.list.options.map(t => t.value);\n    const s = new Set(this.tabService.selectedOptions);\n    this.list.options.forEach(t => {\n      t.selected = s.has(t.value);\n      // console.info(`'${t.value}' selected:`, t.selected);\n    });\n\n    const options_set = new Set(options);\n    this.tabService.selectedOptions.forEach(option => {\n      if (!options_set.has(option))\n        throw TypeError(`'${option}' not found in mat-selection-list`);\n    });\n\n    this.checkSelectAll();\n  }\n\n  openTab(title: string, template, data, isCloseable = false) {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      VerticalTabComponent\n    );\n\n    // create a component instance\n    const componentRef = this.dynamicTabPlaceholder.viewContainer.createComponent(componentFactory);\n\n    // set the according properties on our component instance\n    const instance: VerticalTabComponent = componentRef.instance as VerticalTabComponent;\n    instance.tabTitle = title;\n    instance.template = template;\n    instance.dataContext = data;\n    instance.isCloseable = isCloseable;\n    instance.active = true;\n\n    this.dynamicTabs.push(instance);\n    this.selectTab(this.dynamicTabs[this.dynamicTabs.length - 1]);\n  }\n\n  closeTab(tab: VerticalTabComponent) {\n    for (let i = 0; i < this.dynamicTabs.length; i++) {\n      if (this.dynamicTabs[i] === tab) {\n        this.dynamicTabs.splice(i, 1);\n\n        this.dynamicTabPlaceholder.viewContainer.remove(i);\n        this.tabService.selectedOptions = [tab.tabTitle];  // TODO: duplicate handling\n        this.selectTab(this.tabs.first);\n        break;\n      }\n    }\n    this.checkSelectAll();\n  }\n\n  closeActiveTab() {\n    if (this.multi) console.warn('Closing the first active tab');\n    const activeTab = this.dynamicTabs.filter(tab => tab.active);\n    if (activeTab.length > 0) this.closeTab(activeTab[0]);\n    this.checkSelectAll();\n  }\n\n  toggleSelect() {\n    this.allSelected ? this.list.deselectAll() : this.list.selectAll();\n    this.allSelected = !this.allSelected;\n    this.checkSelectAll();\n  }\n\n  private toggleTabActivations() {\n    const arr: VerticalTabComponent[] = this.tabs.toArray().concat(this.dynamicTabs);\n    if (arr == null || arr.length < 1) return;\n    const s = new Set(this.tabService.selectedOptions);\n    arr.forEach(tab => tab.active = s.has(tab.tabTitle));\n  }\n\n  private setOptions() {\n    if (this.multi || !this.tabService.selectedOptions.length ||\n      !this.lastSelectedOptions || !this.lastSelectedOptions.length)\n      return;\n\n    this.tabService.selectedOptions = this.tabService.selectedOptions.filter(\n      tabTitle => tabTitle !== this.lastSelectedOptions[this.lastSelectedOptions.length - 1]\n    );\n\n    this.lastSelectedOptions = this.tabService.selectedOptions;\n  }\n\n  private checkSelectAll() {\n    if (!this.list || !this.list.options) return;\n    this.allSelected = this.list.options.length < 1 ? false\n      : this.list.options.reduce((p, c) => p ? c.selected : p, true);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule, MatDividerModule, MatListModule } from '@angular/material';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { VerticalTabsComponent } from './vertical-tabs.component';\nimport { VerticalTabComponent } from './vertical-tab.component';\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule,\n    FlexLayoutModule,\n    MatListModule, MatDividerModule, MatButtonModule\n  ],\n  entryComponents: [VerticalTabComponent],\n  declarations: [DynamicTabAnchorDirective, VerticalTabComponent, VerticalTabsComponent],\n  exports: [VerticalTabComponent, VerticalTabsComponent]\n})\nexport class VerticalTabsModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: VerticalTabsModule, providers: [VerticalTabsService] };\n  }\n}\n"]}