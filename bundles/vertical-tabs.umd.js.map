{"version":3,"file":"vertical-tabs.umd.js.map","sources":["ng://vertical-tabs/lib/vertical-tabs.service.ts","ng://vertical-tabs/lib/dynamic-tab-anchor.directive.ts","ng://vertical-tabs/lib/vertical-tab.component.ts","ng://vertical-tabs/lib/vertical-tabs.component.ts","ng://vertical-tabs/lib/vertical-tabs.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerticalTabsService {\n  multi: boolean;\n  selectedOptions: string[];\n\n  constructor() {\n    this.selectedOptions = [];\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngVerticalDynamicTabAnchor]'\n})\nexport class DynamicTabAnchorDirective {\n  constructor(public viewContainer: ViewContainerRef) {\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n\n@Component({\n  selector: 'ng-vertical-tab',\n  template: `<div *ngIf=\"active\" class=\"pane\">\n  <h3 class=\"tab-heading\" *ngIf=\"tabsService.multi && tabsService.selectedOptions.length > 1\">\n    {{tabTitle}}\n  </h3>\n  <ng-content></ng-content>\n  <ng-container *ngIf=\"template\"\n                [ngTemplateOutlet]=\"template\"\n                [ngTemplateOutletContext]=\"{person: dataContext}\">\n  </ng-container>\n</div>\n`,\n  styles: [`\n    .pane {\n      padding: 1em;\n    }\n  `]\n})\nexport class VerticalTabComponent {\n  @Input() tabTitle: string;\n  @Input() active = false;\n  @Input() template;\n  @Input() dataContext;\n  @Input() isCloseable = false;\n\n  constructor(public tabsService: VerticalTabsService) {\n  }\n}\n","import { AfterContentInit, Component, ComponentFactoryResolver, ContentChildren, Input, QueryList, ViewChild } from '@angular/core';\nimport { MatSelectionList } from '@angular/material';\n\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { VerticalTabComponent } from './vertical-tab.component';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n@Component({\n  selector: 'ng-vertical-tabs',\n  template: `<div fxLayout=\"row\" fxLayoutGap=\"1px\" fxLayout.xs=\"column\">\n  <div fxFlex=\"33%\">\n    <mat-selection-list #list [(ngModel)]=\"tabService.selectedOptions\"\n                        (ngModelChange)=\"onNgModelChange()\">\n      <mat-list-option *ngFor=\"let tab of [].concat(tabs.toArray(), dynamicTabs)\" [value]=\"tab.tabTitle\">\n        {{tab.tabTitle}}\n      </mat-list-option>\n    </mat-selection-list>\n    <mat-divider></mat-divider>\n    <button mat-button color=\"primary\" id=\"select\"\n            (click)=\"toggleSelect()\" *ngIf=\"showSelectAll\">\n      {{allSelected ? 'Reset selection' : 'Select all'}}\n    </button>\n  </div>\n\n  <div fxFlex=\"66%\" *ngIf=\"tabService.selectedOptions.length\">\n    <ng-content></ng-content>\n    <ng-template ngVerticalDynamicTabAnchor #container></ng-template>\n  </div>\n</div>\n`,\n  styles: []\n})\nexport class VerticalTabsComponent implements AfterContentInit {\n  @ContentChildren(VerticalTabComponent) tabs: QueryList<VerticalTabComponent>;\n  @ViewChild(DynamicTabAnchorDirective) dynamicTabPlaceholder: DynamicTabAnchorDirective;\n\n  @ViewChild(MatSelectionList) list: MatSelectionList;\n\n  @Input() multi = true;\n  @Input() selectFirstTab = true;\n  @Input() showSelectAll = false;\n  allSelected = true;\n\n  dynamicTabs: VerticalTabComponent[] = [];\n\n  lastSelectedOptions: string[];\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              public tabService: VerticalTabsService) {\n    this.tabService.multi = this.multi;\n  }\n\n  // contentChildren are set\n  ngAfterContentInit() {\n    // if there is no active tab set, activate the first\n    if (this.selectFirstTab && !this.tabs.filter(tab => tab.active).length)\n      this.selectTab(this.tabs.first);\n    else this.checkSelectAll();\n  }\n\n  onNgModelChange(/*selected: string[]*/) {\n    this.setOptions();\n    this.toggleTabActivations();\n    this.checkSelectAll();\n  }\n\n  selectTab(tab: VerticalTabComponent) {\n    this.multi ?\n      this.tabService.selectedOptions.push(tab.tabTitle)\n      : this.tabService.selectedOptions = [tab.tabTitle];\n    tab.active = true;\n\n    if (!this.list.options) return;\n\n    const options = this.list.options.map(t => t.value);\n    const s = new Set(this.tabService.selectedOptions);\n    this.list.options.forEach(t => {\n      t.selected = s.has(t.value);\n      // console.info(`'${t.value}' selected:`, t.selected);\n    });\n\n    const options_set = new Set(options);\n    this.tabService.selectedOptions.forEach(option => {\n      if (!options_set.has(option))\n        throw TypeError(`'${option}' not found in mat-selection-list`);\n    });\n\n    this.checkSelectAll();\n  }\n\n  openTab(title: string, template, data, isCloseable = false) {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      VerticalTabComponent\n    );\n\n    // create a component instance\n    const componentRef = this.dynamicTabPlaceholder.viewContainer.createComponent(componentFactory);\n\n    // set the according properties on our component instance\n    const instance: VerticalTabComponent = componentRef.instance as VerticalTabComponent;\n    instance.tabTitle = title;\n    instance.template = template;\n    instance.dataContext = data;\n    instance.isCloseable = isCloseable;\n    instance.active = true;\n\n    this.dynamicTabs.push(instance);\n    this.selectTab(this.dynamicTabs[this.dynamicTabs.length - 1]);\n  }\n\n  closeTab(tab: VerticalTabComponent) {\n    for (let i = 0; i < this.dynamicTabs.length; i++) {\n      if (this.dynamicTabs[i] === tab) {\n        this.dynamicTabs.splice(i, 1);\n\n        this.dynamicTabPlaceholder.viewContainer.remove(i);\n        this.tabService.selectedOptions = [tab.tabTitle];  // TODO: duplicate handling\n        this.selectTab(this.tabs.first);\n        break;\n      }\n    }\n    this.checkSelectAll();\n  }\n\n  closeActiveTab() {\n    if (this.multi) console.warn('Closing the first active tab');\n    const activeTab = this.dynamicTabs.filter(tab => tab.active);\n    if (activeTab.length > 0) this.closeTab(activeTab[0]);\n    this.checkSelectAll();\n  }\n\n  toggleSelect() {\n    this.allSelected ? this.list.deselectAll() : this.list.selectAll();\n    this.allSelected = !this.allSelected;\n    this.checkSelectAll();\n  }\n\n  private toggleTabActivations() {\n    const arr: VerticalTabComponent[] = this.tabs.toArray().concat(this.dynamicTabs);\n    if (arr == null || arr.length < 1) return;\n    const s = new Set(this.tabService.selectedOptions);\n    arr.forEach(tab => tab.active = s.has(tab.tabTitle));\n  }\n\n  private setOptions() {\n    if (this.multi || !this.tabService.selectedOptions.length ||\n      !this.lastSelectedOptions || !this.lastSelectedOptions.length)\n      return;\n\n    this.tabService.selectedOptions = this.tabService.selectedOptions.filter(\n      tabTitle => tabTitle !== this.lastSelectedOptions[this.lastSelectedOptions.length - 1]\n    );\n\n    this.lastSelectedOptions = this.tabService.selectedOptions;\n  }\n\n  private checkSelectAll() {\n    if (!this.list || !this.list.options) return;\n    this.allSelected = this.list.options.length < 1 ? false\n      : this.list.options.reduce((p, c) => p ? c.selected : p, true);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule, MatDividerModule, MatListModule } from '@angular/material';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { VerticalTabsComponent } from './vertical-tabs.component';\nimport { VerticalTabComponent } from './vertical-tab.component';\nimport { DynamicTabAnchorDirective } from './dynamic-tab-anchor.directive';\nimport { VerticalTabsService } from './vertical-tabs.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule,\n    FlexLayoutModule,\n    MatListModule, MatDividerModule, MatButtonModule\n  ],\n  entryComponents: [VerticalTabComponent],\n  declarations: [DynamicTabAnchorDirective, VerticalTabComponent, VerticalTabsComponent],\n  exports: [VerticalTabComponent, VerticalTabsComponent]\n})\nexport class VerticalTabsModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: VerticalTabsModule, providers: [VerticalTabsService] };\n  }\n}\n"],"names":["Injectable","Directive","ViewContainerRef","Component","Input","ComponentFactoryResolver","ContentChildren","ViewChild","MatSelectionList","NgModule","CommonModule","FormsModule","FlexLayoutModule","MatListModule","MatDividerModule","MatButtonModule"],"mappings":"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"}
